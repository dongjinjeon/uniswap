{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dev_01\\\\uniswapclonef\\\\uniswap-front-interface\\\\src\\\\pages\\\\MigrateV1\\\\MigrateV1Exchange.tsx\";\nimport { AddressZero } from '@ethersproject/constants';\nimport { Currency, CurrencyAmount, Fraction, JSBI, Percent, Token, TokenAmount, WETH } from '@uniswap/sdk';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport ReactGA from 'react-ga';\nimport { Redirect } from 'react-router';\nimport { Text } from 'rebass';\nimport { ButtonConfirmed } from '../../components/Button';\nimport { LightCard, PinkCard, YellowCard } from '../../components/Card';\nimport { AutoColumn } from '../../components/Column';\nimport CurrencyLogo from '../../components/CurrencyLogo';\nimport QuestionHelper from '../../components/QuestionHelper';\nimport { AutoRow, RowBetween, RowFixed } from '../../components/Row';\nimport { Dots } from '../../components/swap/styleds';\nimport { DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from '../../constants';\nimport { MIGRATOR_ADDRESS } from '../../constants/abis/migrator';\nimport { PairState, usePair } from '../../data/Reserves';\nimport { useTotalSupply } from '../../data/TotalSupply';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useToken } from '../../hooks/Tokens';\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback';\nimport { useV1ExchangeContract, useV2MigratorContract } from '../../hooks/useContract';\nimport { NEVER_RELOAD, useSingleCallResult } from '../../state/multicall/hooks';\nimport { useIsTransactionPending, useTransactionAdder } from '../../state/transactions/hooks';\nimport { useETHBalances, useTokenBalance } from '../../state/wallet/hooks';\nimport { BackArrow, ExternalLink, TYPE } from '../../theme';\nimport { getEtherscanLink, isAddress } from '../../utils';\nimport { BodyWrapper } from '../AppBody';\nimport { EmptyState } from './EmptyState';\nconst POOL_CURRENCY_AMOUNT_MIN = new Fraction(JSBI.BigInt(1), JSBI.BigInt(1000000));\nconst WEI_DENOM = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(18));\nconst ZERO = JSBI.BigInt(0);\nconst ONE = JSBI.BigInt(1);\nconst ZERO_FRACTION = new Fraction(ZERO, ONE);\nconst ALLOWED_OUTPUT_MIN_PERCENT = new Percent(JSBI.BigInt(10000 - INITIAL_ALLOWED_SLIPPAGE), JSBI.BigInt(10000));\n\nfunction FormattedPoolCurrencyAmount({\n  currencyAmount\n}) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, currencyAmount.equalTo(JSBI.BigInt(0)) ? '0' : currencyAmount.greaterThan(POOL_CURRENCY_AMOUNT_MIN) ? currencyAmount.toSignificant(4) : `<${POOL_CURRENCY_AMOUNT_MIN.toSignificant(1)}`);\n}\n\nexport function V1LiquidityInfo({\n  token,\n  liquidityTokenAmount,\n  tokenWorth,\n  ethWorth\n}) {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoRow, {\n    style: {\n      justifyContent: 'flex-start',\n      width: 'fit-content'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CurrencyLogo, {\n    size: \"24px\",\n    currency: token,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: '.75rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.mediumHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormattedPoolCurrencyAmount, {\n    currencyAmount: liquidityTokenAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 14\n    }\n  }), ' ', chainId && token.equals(WETH[chainId]) ? 'WETH' : token.symbol, \"/ETH\"))), /*#__PURE__*/React.createElement(RowBetween, {\n    my: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: 16,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Pooled \", chainId && token.equals(WETH[chainId]) ? 'WETH' : token.symbol, \":\"), /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: 16,\n    fontWeight: 500,\n    marginLeft: '6px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, tokenWorth.toSignificant(4)), /*#__PURE__*/React.createElement(CurrencyLogo, {\n    size: \"20px\",\n    style: {\n      marginLeft: '8px'\n    },\n    currency: token,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(RowBetween, {\n    mb: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: 16,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Pooled ETH:\"), /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: 16,\n    fontWeight: 500,\n    marginLeft: '6px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormattedPoolCurrencyAmount, {\n    currencyAmount: ethWorth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(CurrencyLogo, {\n    size: \"20px\",\n    style: {\n      marginLeft: '8px'\n    },\n    currency: Currency.ETHER,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }))));\n}\n\nfunction V1PairMigration({\n  liquidityTokenAmount,\n  token\n}) {\n  var _useETHBalances, _v1SpotPrice$invert, _v2SpotPrice$invert, _v1SpotPrice$invert2;\n\n  const {\n    account,\n    chainId\n  } = useActiveWeb3React();\n  const totalSupply = useTotalSupply(liquidityTokenAmount.token);\n  const exchangeETHBalance = (_useETHBalances = useETHBalances([liquidityTokenAmount.token.address])) === null || _useETHBalances === void 0 ? void 0 : _useETHBalances[liquidityTokenAmount.token.address];\n  const exchangeTokenBalance = useTokenBalance(liquidityTokenAmount.token.address, token);\n  const [v2PairState, v2Pair] = usePair(chainId ? WETH[chainId] : undefined, token);\n  const isFirstLiquidityProvider = v2PairState === PairState.NOT_EXISTS;\n  const v2SpotPrice = chainId && v2Pair ? v2Pair.reserveOf(token).divide(v2Pair.reserveOf(WETH[chainId])) : undefined;\n  const [confirmingMigration, setConfirmingMigration] = useState(false);\n  const [pendingMigrationHash, setPendingMigrationHash] = useState(null);\n  const shareFraction = totalSupply ? new Percent(liquidityTokenAmount.raw, totalSupply.raw) : ZERO_FRACTION;\n  const ethWorth = exchangeETHBalance ? CurrencyAmount.ether(exchangeETHBalance.multiply(shareFraction).multiply(WEI_DENOM).quotient) : CurrencyAmount.ether(ZERO);\n  const tokenWorth = exchangeTokenBalance ? new TokenAmount(token, shareFraction.multiply(exchangeTokenBalance.raw).quotient) : new TokenAmount(token, ZERO);\n  const [approval, approve] = useApproveCallback(liquidityTokenAmount, MIGRATOR_ADDRESS);\n  const v1SpotPrice = exchangeTokenBalance && exchangeETHBalance ? exchangeTokenBalance.divide(new Fraction(exchangeETHBalance.raw, WEI_DENOM)) : null;\n  const priceDifferenceFraction = v1SpotPrice && v2SpotPrice ? v1SpotPrice.divide(v2SpotPrice).multiply('100').subtract('100') : undefined;\n  const priceDifferenceAbs = (priceDifferenceFraction === null || priceDifferenceFraction === void 0 ? void 0 : priceDifferenceFraction.lessThan(ZERO)) ? priceDifferenceFraction === null || priceDifferenceFraction === void 0 ? void 0 : priceDifferenceFraction.multiply('-1') : priceDifferenceFraction;\n  const minAmountETH = v2SpotPrice && tokenWorth ? tokenWorth.divide(v2SpotPrice).multiply(WEI_DENOM).multiply(ALLOWED_OUTPUT_MIN_PERCENT).quotient : ethWorth === null || ethWorth === void 0 ? void 0 : ethWorth.numerator;\n  const minAmountToken = v2SpotPrice && ethWorth ? ethWorth.multiply(v2SpotPrice).multiply(JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(token.decimals))).multiply(ALLOWED_OUTPUT_MIN_PERCENT).quotient : tokenWorth === null || tokenWorth === void 0 ? void 0 : tokenWorth.numerator;\n  const addTransaction = useTransactionAdder();\n  const isMigrationPending = useIsTransactionPending(pendingMigrationHash !== null && pendingMigrationHash !== void 0 ? pendingMigrationHash : undefined);\n  const migrator = useV2MigratorContract();\n  const migrate = useCallback(() => {\n    if (!minAmountToken || !minAmountETH || !migrator) return;\n    setConfirmingMigration(true);\n    migrator.migrate(token.address, minAmountToken.toString(), minAmountETH.toString(), account, Math.floor(new Date().getTime() / 1000) + DEFAULT_DEADLINE_FROM_NOW).then(response => {\n      ReactGA.event({\n        category: 'Migrate',\n        action: 'V1->V2',\n        label: token === null || token === void 0 ? void 0 : token.symbol\n      });\n      addTransaction(response, {\n        summary: `Migrate ${token.symbol} liquidity to V2`\n      });\n      setPendingMigrationHash(response.hash);\n    }).catch(() => {\n      setConfirmingMigration(false);\n    });\n  }, [minAmountToken, minAmountETH, migrator, token, account, addTransaction]);\n  const noLiquidityTokens = !!liquidityTokenAmount && liquidityTokenAmount.equalTo(ZERO);\n  const largePriceDifference = !!priceDifferenceAbs && !priceDifferenceAbs.lessThan(JSBI.BigInt(5));\n  const isSuccessfullyMigrated = !!pendingMigrationHash && noLiquidityTokens;\n  return /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    my: 9,\n    style: {\n      fontWeight: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }\n  }, \"This tool will safely migrate your V1 liquidity to V2 with minimal price risk. The process is completely trustless thanks to the\", ' ', chainId && /*#__PURE__*/React.createElement(ExternalLink, {\n    href: getEtherscanLink(chainId, MIGRATOR_ADDRESS, 'address'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.blue, {\n    display: \"inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, \"Uniswap migration contract\\u2197\")), \".\"), !isFirstLiquidityProvider && largePriceDifference ? /*#__PURE__*/React.createElement(YellowCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    style: {\n      marginBottom: 8,\n      fontWeight: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, \"It\", \"'\", \"s best to deposit liquidity into Uniswap V2 at a price you believe is correct. If the V2 price seems incorrect, you can either make a swap to move the price or wait for someone else to do so.\"), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"8px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  }, \"V1 Price:\"), /*#__PURE__*/React.createElement(TYPE.black, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }, v1SpotPrice === null || v1SpotPrice === void 0 ? void 0 : v1SpotPrice.toSignificant(6), \" \", token.symbol, \"/ETH\")), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TYPE.black, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }, v1SpotPrice === null || v1SpotPrice === void 0 ? void 0 : (_v1SpotPrice$invert = v1SpotPrice.invert()) === null || _v1SpotPrice$invert === void 0 ? void 0 : _v1SpotPrice$invert.toSignificant(6), \" ETH/\", token.symbol)), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  }, \"V2 Price:\"), /*#__PURE__*/React.createElement(TYPE.black, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 15\n    }\n  }, v2SpotPrice === null || v2SpotPrice === void 0 ? void 0 : v2SpotPrice.toSignificant(6), \" \", token.symbol, \"/ETH\")), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TYPE.black, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 15\n    }\n  }, v2SpotPrice === null || v2SpotPrice === void 0 ? void 0 : (_v2SpotPrice$invert = v2SpotPrice.invert()) === null || _v2SpotPrice$invert === void 0 ? void 0 : _v2SpotPrice$invert.toSignificant(6), \" ETH/\", token.symbol)), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 15\n    }\n  }, \"Price Difference:\"), /*#__PURE__*/React.createElement(TYPE.black, {\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }, priceDifferenceAbs === null || priceDifferenceAbs === void 0 ? void 0 : priceDifferenceAbs.toSignificant(4), \"%\")))) : null, isFirstLiquidityProvider && /*#__PURE__*/React.createElement(PinkCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    style: {\n      marginBottom: 8,\n      fontWeight: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }, \"You are the first liquidity provider for this pair on Uniswap V2. Your liquidity will be migrated at the current V1 price. Your transaction cost also includes the gas to create the pool.\"), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"8px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 15\n    }\n  }, \"V1 Price:\"), /*#__PURE__*/React.createElement(TYPE.black, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 15\n    }\n  }, v1SpotPrice === null || v1SpotPrice === void 0 ? void 0 : v1SpotPrice.toSignificant(6), \" \", token.symbol, \"/ETH\")), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TYPE.black, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 15\n    }\n  }, v1SpotPrice === null || v1SpotPrice === void 0 ? void 0 : (_v1SpotPrice$invert2 = v1SpotPrice.invert()) === null || _v1SpotPrice$invert2 === void 0 ? void 0 : _v1SpotPrice$invert2.toSignificant(6), \" ETH/\", token.symbol)))), /*#__PURE__*/React.createElement(LightCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(V1LiquidityInfo, {\n    token: token,\n    liquidityTokenAmount: liquidityTokenAmount,\n    tokenWorth: tokenWorth,\n    ethWorth: ethWorth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      marginTop: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"12px\",\n    style: {\n      flex: '1',\n      marginRight: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ButtonConfirmed, {\n    confirmed: approval === ApprovalState.APPROVED,\n    disabled: approval !== ApprovalState.NOT_APPROVED,\n    onClick: approve,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, approval === ApprovalState.PENDING ? /*#__PURE__*/React.createElement(Dots, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  }, \"Approving\") : approval === ApprovalState.APPROVED ? 'Approved' : 'Approve')), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"12px\",\n    style: {\n      flex: '1'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ButtonConfirmed, {\n    confirmed: isSuccessfullyMigrated,\n    disabled: isSuccessfullyMigrated || noLiquidityTokens || isMigrationPending || approval !== ApprovalState.APPROVED || confirmingMigration,\n    onClick: migrate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }\n  }, isSuccessfullyMigrated ? 'Success' : isMigrationPending ? /*#__PURE__*/React.createElement(Dots, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 74\n    }\n  }, \"Migrating\") : 'Migrate')))), /*#__PURE__*/React.createElement(TYPE.darkGray, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }\n  }, `Your Uniswap V1 ${token.symbol}/ETH liquidity will become Uniswap V2 ${token.symbol}/ETH liquidity.`));\n}\n\nexport default function MigrateV1Exchange({\n  history,\n  match: {\n    params: {\n      address\n    }\n  }\n}) {\n  var _useSingleCallResult, _useSingleCallResult$;\n\n  const validatedAddress = isAddress(address);\n  const {\n    chainId,\n    account\n  } = useActiveWeb3React();\n  const exchangeContract = useV1ExchangeContract(validatedAddress ? validatedAddress : undefined);\n  const tokenAddress = (_useSingleCallResult = useSingleCallResult(exchangeContract, 'tokenAddress', undefined, NEVER_RELOAD)) === null || _useSingleCallResult === void 0 ? void 0 : (_useSingleCallResult$ = _useSingleCallResult.result) === null || _useSingleCallResult$ === void 0 ? void 0 : _useSingleCallResult$[0];\n  const token = useToken(tokenAddress);\n  const liquidityToken = useMemo(() => validatedAddress && chainId && token ? new Token(chainId, validatedAddress, 18, `UNI-V1-${token.symbol}`, 'Uniswap V1') : undefined, [chainId, validatedAddress, token]);\n  const userLiquidityBalance = useTokenBalance(account !== null && account !== void 0 ? account : undefined, liquidityToken); // redirect for invalid url params\n\n  if (!validatedAddress || tokenAddress === AddressZero) {\n    console.error('Invalid address in path', address);\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/migrate/v1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(BodyWrapper, {\n    style: {\n      padding: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"16px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AutoRow, {\n    style: {\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    },\n    gap: \"8px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BackArrow, {\n    to: \"/migrate/v1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TYPE.mediumHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 11\n    }\n  }, \"Migrate V1 Liquidity\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(QuestionHelper, {\n    text: \"Migrate your liquidity tokens from Uniswap V1 to Uniswap V2.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 13\n    }\n  }))), !account ? /*#__PURE__*/React.createElement(TYPE.largeHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 11\n    }\n  }, \"You must connect an account.\") : validatedAddress && chainId && (token === null || token === void 0 ? void 0 : token.equals(WETH[chainId])) ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TYPE.body, {\n    my: 9,\n    style: {\n      fontWeight: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }\n  }, \"Because Uniswap V2 uses WETH under the hood, your Uniswap V1 WETH/ETH liquidity cannot be migrated. You may want to remove your liquidity instead.\"), /*#__PURE__*/React.createElement(ButtonConfirmed, {\n    onClick: () => {\n      history.push(`/remove/v1/${validatedAddress}`);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 13\n    }\n  }, \"Remove\")) : userLiquidityBalance && token ? /*#__PURE__*/React.createElement(V1PairMigration, {\n    liquidityTokenAmount: userLiquidityBalance,\n    token: token,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(EmptyState, {\n    message: \"Loading...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/dev_01/uniswapclonef/uniswap-front-interface/src/pages/MigrateV1/MigrateV1Exchange.tsx"],"names":["AddressZero","Currency","CurrencyAmount","Fraction","JSBI","Percent","Token","TokenAmount","WETH","React","useCallback","useMemo","useState","ReactGA","Redirect","Text","ButtonConfirmed","LightCard","PinkCard","YellowCard","AutoColumn","CurrencyLogo","QuestionHelper","AutoRow","RowBetween","RowFixed","Dots","DEFAULT_DEADLINE_FROM_NOW","INITIAL_ALLOWED_SLIPPAGE","MIGRATOR_ADDRESS","PairState","usePair","useTotalSupply","useActiveWeb3React","useToken","ApprovalState","useApproveCallback","useV1ExchangeContract","useV2MigratorContract","NEVER_RELOAD","useSingleCallResult","useIsTransactionPending","useTransactionAdder","useETHBalances","useTokenBalance","BackArrow","ExternalLink","TYPE","getEtherscanLink","isAddress","BodyWrapper","EmptyState","POOL_CURRENCY_AMOUNT_MIN","BigInt","WEI_DENOM","exponentiate","ZERO","ONE","ZERO_FRACTION","ALLOWED_OUTPUT_MIN_PERCENT","FormattedPoolCurrencyAmount","currencyAmount","equalTo","greaterThan","toSignificant","V1LiquidityInfo","token","liquidityTokenAmount","tokenWorth","ethWorth","chainId","justifyContent","width","marginLeft","equals","symbol","ETHER","V1PairMigration","account","totalSupply","exchangeETHBalance","address","exchangeTokenBalance","v2PairState","v2Pair","undefined","isFirstLiquidityProvider","NOT_EXISTS","v2SpotPrice","reserveOf","divide","confirmingMigration","setConfirmingMigration","pendingMigrationHash","setPendingMigrationHash","shareFraction","raw","ether","multiply","quotient","approval","approve","v1SpotPrice","priceDifferenceFraction","subtract","priceDifferenceAbs","lessThan","minAmountETH","numerator","minAmountToken","decimals","addTransaction","isMigrationPending","migrator","migrate","toString","Math","floor","Date","getTime","then","response","event","category","action","label","summary","hash","catch","noLiquidityTokens","largePriceDifference","isSuccessfullyMigrated","fontWeight","marginBottom","invert","display","marginTop","flex","marginRight","APPROVED","NOT_APPROVED","PENDING","textAlign","MigrateV1Exchange","history","match","params","validatedAddress","exchangeContract","tokenAddress","result","liquidityToken","userLiquidityBalance","console","error","padding","alignItems","push"],"mappings":"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","sourcesContent":["import { TransactionResponse } from '@ethersproject/abstract-provider'\r\nimport { AddressZero } from '@ethersproject/constants'\r\nimport { Currency, CurrencyAmount, Fraction, JSBI, Percent, Token, TokenAmount, WETH } from '@uniswap/sdk'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport ReactGA from 'react-ga'\r\nimport { Redirect, RouteComponentProps } from 'react-router'\r\nimport { Text } from 'rebass'\r\nimport { ButtonConfirmed } from '../../components/Button'\r\nimport { LightCard, PinkCard, YellowCard } from '../../components/Card'\r\nimport { AutoColumn } from '../../components/Column'\r\nimport CurrencyLogo from '../../components/CurrencyLogo'\r\nimport QuestionHelper from '../../components/QuestionHelper'\r\nimport { AutoRow, RowBetween, RowFixed } from '../../components/Row'\r\nimport { Dots } from '../../components/swap/styleds'\r\nimport { DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from '../../constants'\r\nimport { MIGRATOR_ADDRESS } from '../../constants/abis/migrator'\r\nimport { PairState, usePair } from '../../data/Reserves'\r\nimport { useTotalSupply } from '../../data/TotalSupply'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useToken } from '../../hooks/Tokens'\r\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\r\nimport { useV1ExchangeContract, useV2MigratorContract } from '../../hooks/useContract'\r\nimport { NEVER_RELOAD, useSingleCallResult } from '../../state/multicall/hooks'\r\nimport { useIsTransactionPending, useTransactionAdder } from '../../state/transactions/hooks'\r\nimport { useETHBalances, useTokenBalance } from '../../state/wallet/hooks'\r\nimport { BackArrow, ExternalLink, TYPE } from '../../theme'\r\nimport { getEtherscanLink, isAddress } from '../../utils'\r\nimport { BodyWrapper } from '../AppBody'\r\nimport { EmptyState } from './EmptyState'\r\n\r\nconst POOL_CURRENCY_AMOUNT_MIN = new Fraction(JSBI.BigInt(1), JSBI.BigInt(1000000))\r\nconst WEI_DENOM = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(18))\r\nconst ZERO = JSBI.BigInt(0)\r\nconst ONE = JSBI.BigInt(1)\r\nconst ZERO_FRACTION = new Fraction(ZERO, ONE)\r\nconst ALLOWED_OUTPUT_MIN_PERCENT = new Percent(JSBI.BigInt(10000 - INITIAL_ALLOWED_SLIPPAGE), JSBI.BigInt(10000))\r\n\r\nfunction FormattedPoolCurrencyAmount({ currencyAmount }: { currencyAmount: CurrencyAmount }) {\r\n  return (\r\n    <>\r\n      {currencyAmount.equalTo(JSBI.BigInt(0))\r\n        ? '0'\r\n        : currencyAmount.greaterThan(POOL_CURRENCY_AMOUNT_MIN)\r\n        ? currencyAmount.toSignificant(4)\r\n        : `<${POOL_CURRENCY_AMOUNT_MIN.toSignificant(1)}`}\r\n    </>\r\n  )\r\n}\r\n\r\nexport function V1LiquidityInfo({\r\n  token,\r\n  liquidityTokenAmount,\r\n  tokenWorth,\r\n  ethWorth\r\n}: {\r\n  token: Token\r\n  liquidityTokenAmount: TokenAmount\r\n  tokenWorth: TokenAmount\r\n  ethWorth: CurrencyAmount\r\n}) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  return (\r\n    <>\r\n      <AutoRow style={{ justifyContent: 'flex-start', width: 'fit-content' }}>\r\n        <CurrencyLogo size=\"24px\" currency={token} />\r\n        <div style={{ marginLeft: '.75rem' }}>\r\n          <TYPE.mediumHeader>\r\n            {<FormattedPoolCurrencyAmount currencyAmount={liquidityTokenAmount} />}{' '}\r\n            {chainId && token.equals(WETH[chainId]) ? 'WETH' : token.symbol}/ETH\r\n          </TYPE.mediumHeader>\r\n        </div>\r\n      </AutoRow>\r\n\r\n      <RowBetween my=\"1rem\">\r\n        <Text fontSize={16} fontWeight={500}>\r\n          Pooled {chainId && token.equals(WETH[chainId]) ? 'WETH' : token.symbol}:\r\n        </Text>\r\n        <RowFixed>\r\n          <Text fontSize={16} fontWeight={500} marginLeft={'6px'}>\r\n            {tokenWorth.toSignificant(4)}\r\n          </Text>\r\n          <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={token} />\r\n        </RowFixed>\r\n      </RowBetween>\r\n      <RowBetween mb=\"1rem\">\r\n        <Text fontSize={16} fontWeight={500}>\r\n          Pooled ETH:\r\n        </Text>\r\n        <RowFixed>\r\n          <Text fontSize={16} fontWeight={500} marginLeft={'6px'}>\r\n            <FormattedPoolCurrencyAmount currencyAmount={ethWorth} />\r\n          </Text>\r\n          <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={Currency.ETHER} />\r\n        </RowFixed>\r\n      </RowBetween>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction V1PairMigration({ liquidityTokenAmount, token }: { liquidityTokenAmount: TokenAmount; token: Token }) {\r\n  const { account, chainId } = useActiveWeb3React()\r\n  const totalSupply = useTotalSupply(liquidityTokenAmount.token)\r\n  const exchangeETHBalance = useETHBalances([liquidityTokenAmount.token.address])?.[liquidityTokenAmount.token.address]\r\n  const exchangeTokenBalance = useTokenBalance(liquidityTokenAmount.token.address, token)\r\n\r\n  const [v2PairState, v2Pair] = usePair(chainId ? WETH[chainId] : undefined, token)\r\n  const isFirstLiquidityProvider: boolean = v2PairState === PairState.NOT_EXISTS\r\n\r\n  const v2SpotPrice = chainId && v2Pair ? v2Pair.reserveOf(token).divide(v2Pair.reserveOf(WETH[chainId])) : undefined\r\n\r\n  const [confirmingMigration, setConfirmingMigration] = useState<boolean>(false)\r\n  const [pendingMigrationHash, setPendingMigrationHash] = useState<string | null>(null)\r\n\r\n  const shareFraction: Fraction = totalSupply ? new Percent(liquidityTokenAmount.raw, totalSupply.raw) : ZERO_FRACTION\r\n\r\n  const ethWorth: CurrencyAmount = exchangeETHBalance\r\n    ? CurrencyAmount.ether(exchangeETHBalance.multiply(shareFraction).multiply(WEI_DENOM).quotient)\r\n    : CurrencyAmount.ether(ZERO)\r\n\r\n  const tokenWorth: TokenAmount = exchangeTokenBalance\r\n    ? new TokenAmount(token, shareFraction.multiply(exchangeTokenBalance.raw).quotient)\r\n    : new TokenAmount(token, ZERO)\r\n\r\n  const [approval, approve] = useApproveCallback(liquidityTokenAmount, MIGRATOR_ADDRESS)\r\n\r\n  const v1SpotPrice =\r\n    exchangeTokenBalance && exchangeETHBalance\r\n      ? exchangeTokenBalance.divide(new Fraction(exchangeETHBalance.raw, WEI_DENOM))\r\n      : null\r\n\r\n  const priceDifferenceFraction: Fraction | undefined =\r\n    v1SpotPrice && v2SpotPrice\r\n      ? v1SpotPrice\r\n          .divide(v2SpotPrice)\r\n          .multiply('100')\r\n          .subtract('100')\r\n      : undefined\r\n\r\n  const priceDifferenceAbs: Fraction | undefined = priceDifferenceFraction?.lessThan(ZERO)\r\n    ? priceDifferenceFraction?.multiply('-1')\r\n    : priceDifferenceFraction\r\n\r\n  const minAmountETH: JSBI | undefined =\r\n    v2SpotPrice && tokenWorth\r\n      ? tokenWorth\r\n          .divide(v2SpotPrice)\r\n          .multiply(WEI_DENOM)\r\n          .multiply(ALLOWED_OUTPUT_MIN_PERCENT).quotient\r\n      : ethWorth?.numerator\r\n\r\n  const minAmountToken: JSBI | undefined =\r\n    v2SpotPrice && ethWorth\r\n      ? ethWorth\r\n          .multiply(v2SpotPrice)\r\n          .multiply(JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(token.decimals)))\r\n          .multiply(ALLOWED_OUTPUT_MIN_PERCENT).quotient\r\n      : tokenWorth?.numerator\r\n\r\n  const addTransaction = useTransactionAdder()\r\n  const isMigrationPending = useIsTransactionPending(pendingMigrationHash ?? undefined)\r\n\r\n  const migrator = useV2MigratorContract()\r\n  const migrate = useCallback(() => {\r\n    if (!minAmountToken || !minAmountETH || !migrator) return\r\n\r\n    setConfirmingMigration(true)\r\n    migrator\r\n      .migrate(\r\n        token.address,\r\n        minAmountToken.toString(),\r\n        minAmountETH.toString(),\r\n        account,\r\n        Math.floor(new Date().getTime() / 1000) + DEFAULT_DEADLINE_FROM_NOW\r\n      )\r\n      .then((response: TransactionResponse) => {\r\n        ReactGA.event({\r\n          category: 'Migrate',\r\n          action: 'V1->V2',\r\n          label: token?.symbol\r\n        })\r\n\r\n        addTransaction(response, {\r\n          summary: `Migrate ${token.symbol} liquidity to V2`\r\n        })\r\n        setPendingMigrationHash(response.hash)\r\n      })\r\n      .catch(() => {\r\n        setConfirmingMigration(false)\r\n      })\r\n  }, [minAmountToken, minAmountETH, migrator, token, account, addTransaction])\r\n\r\n  const noLiquidityTokens = !!liquidityTokenAmount && liquidityTokenAmount.equalTo(ZERO)\r\n\r\n  const largePriceDifference = !!priceDifferenceAbs && !priceDifferenceAbs.lessThan(JSBI.BigInt(5))\r\n\r\n  const isSuccessfullyMigrated = !!pendingMigrationHash && noLiquidityTokens\r\n\r\n  return (\r\n    <AutoColumn gap=\"20px\">\r\n      <TYPE.body my={9} style={{ fontWeight: 400 }}>\r\n        This tool will safely migrate your V1 liquidity to V2 with minimal price risk. The process is completely\r\n        trustless thanks to the{' '}\r\n        {chainId && (\r\n          <ExternalLink href={getEtherscanLink(chainId, MIGRATOR_ADDRESS, 'address')}>\r\n            <TYPE.blue display=\"inline\">Uniswap migration contract↗</TYPE.blue>\r\n          </ExternalLink>\r\n        )}\r\n        .\r\n      </TYPE.body>\r\n\r\n      {!isFirstLiquidityProvider && largePriceDifference ? (\r\n        <YellowCard>\r\n          <TYPE.body style={{ marginBottom: 8, fontWeight: 400 }}>\r\n            It{\"'\"}s best to deposit liquidity into Uniswap V2 at a price you believe is correct. If the V2 price seems\r\n            incorrect, you can either make a swap to move the price or wait for someone else to do so.\r\n          </TYPE.body>\r\n          <AutoColumn gap=\"8px\">\r\n            <RowBetween>\r\n              <TYPE.body>V1 Price:</TYPE.body>\r\n              <TYPE.black>\r\n                {v1SpotPrice?.toSignificant(6)} {token.symbol}/ETH\r\n              </TYPE.black>\r\n            </RowBetween>\r\n            <RowBetween>\r\n              <div />\r\n              <TYPE.black>\r\n                {v1SpotPrice?.invert()?.toSignificant(6)} ETH/{token.symbol}\r\n              </TYPE.black>\r\n            </RowBetween>\r\n\r\n            <RowBetween>\r\n              <TYPE.body>V2 Price:</TYPE.body>\r\n              <TYPE.black>\r\n                {v2SpotPrice?.toSignificant(6)} {token.symbol}/ETH\r\n              </TYPE.black>\r\n            </RowBetween>\r\n            <RowBetween>\r\n              <div />\r\n              <TYPE.black>\r\n                {v2SpotPrice?.invert()?.toSignificant(6)} ETH/{token.symbol}\r\n              </TYPE.black>\r\n            </RowBetween>\r\n\r\n            <RowBetween>\r\n              <TYPE.body color=\"inherit\">Price Difference:</TYPE.body>\r\n              <TYPE.black color=\"inherit\">{priceDifferenceAbs?.toSignificant(4)}%</TYPE.black>\r\n            </RowBetween>\r\n          </AutoColumn>\r\n        </YellowCard>\r\n      ) : null}\r\n\r\n      {isFirstLiquidityProvider && (\r\n        <PinkCard>\r\n          <TYPE.body style={{ marginBottom: 8, fontWeight: 400 }}>\r\n            You are the first liquidity provider for this pair on Uniswap V2. Your liquidity will be migrated at the\r\n            current V1 price. Your transaction cost also includes the gas to create the pool.\r\n          </TYPE.body>\r\n\r\n          <AutoColumn gap=\"8px\">\r\n            <RowBetween>\r\n              <TYPE.body>V1 Price:</TYPE.body>\r\n              <TYPE.black>\r\n                {v1SpotPrice?.toSignificant(6)} {token.symbol}/ETH\r\n              </TYPE.black>\r\n            </RowBetween>\r\n            <RowBetween>\r\n              <div />\r\n              <TYPE.black>\r\n                {v1SpotPrice?.invert()?.toSignificant(6)} ETH/{token.symbol}\r\n              </TYPE.black>\r\n            </RowBetween>\r\n          </AutoColumn>\r\n        </PinkCard>\r\n      )}\r\n\r\n      <LightCard>\r\n        <V1LiquidityInfo\r\n          token={token}\r\n          liquidityTokenAmount={liquidityTokenAmount}\r\n          tokenWorth={tokenWorth}\r\n          ethWorth={ethWorth}\r\n        />\r\n\r\n        <div style={{ display: 'flex', marginTop: '1rem' }}>\r\n          <AutoColumn gap=\"12px\" style={{ flex: '1', marginRight: 12 }}>\r\n            <ButtonConfirmed\r\n              confirmed={approval === ApprovalState.APPROVED}\r\n              disabled={approval !== ApprovalState.NOT_APPROVED}\r\n              onClick={approve}\r\n            >\r\n              {approval === ApprovalState.PENDING ? (\r\n                <Dots>Approving</Dots>\r\n              ) : approval === ApprovalState.APPROVED ? (\r\n                'Approved'\r\n              ) : (\r\n                'Approve'\r\n              )}\r\n            </ButtonConfirmed>\r\n          </AutoColumn>\r\n          <AutoColumn gap=\"12px\" style={{ flex: '1' }}>\r\n            <ButtonConfirmed\r\n              confirmed={isSuccessfullyMigrated}\r\n              disabled={\r\n                isSuccessfullyMigrated ||\r\n                noLiquidityTokens ||\r\n                isMigrationPending ||\r\n                approval !== ApprovalState.APPROVED ||\r\n                confirmingMigration\r\n              }\r\n              onClick={migrate}\r\n            >\r\n              {isSuccessfullyMigrated ? 'Success' : isMigrationPending ? <Dots>Migrating</Dots> : 'Migrate'}\r\n            </ButtonConfirmed>\r\n          </AutoColumn>\r\n        </div>\r\n      </LightCard>\r\n      <TYPE.darkGray style={{ textAlign: 'center' }}>\r\n        {`Your Uniswap V1 ${token.symbol}/ETH liquidity will become Uniswap V2 ${token.symbol}/ETH liquidity.`}\r\n      </TYPE.darkGray>\r\n    </AutoColumn>\r\n  )\r\n}\r\n\r\nexport default function MigrateV1Exchange({\r\n  history,\r\n  match: {\r\n    params: { address }\r\n  }\r\n}: RouteComponentProps<{ address: string }>) {\r\n  const validatedAddress = isAddress(address)\r\n  const { chainId, account } = useActiveWeb3React()\r\n\r\n  const exchangeContract = useV1ExchangeContract(validatedAddress ? validatedAddress : undefined)\r\n  const tokenAddress = useSingleCallResult(exchangeContract, 'tokenAddress', undefined, NEVER_RELOAD)?.result?.[0]\r\n\r\n  const token = useToken(tokenAddress)\r\n\r\n  const liquidityToken: Token | undefined = useMemo(\r\n    () =>\r\n      validatedAddress && chainId && token\r\n        ? new Token(chainId, validatedAddress, 18, `UNI-V1-${token.symbol}`, 'Uniswap V1')\r\n        : undefined,\r\n    [chainId, validatedAddress, token]\r\n  )\r\n  const userLiquidityBalance = useTokenBalance(account ?? undefined, liquidityToken)\r\n\r\n  // redirect for invalid url params\r\n  if (!validatedAddress || tokenAddress === AddressZero) {\r\n    console.error('Invalid address in path', address)\r\n    return <Redirect to=\"/migrate/v1\" />\r\n  }\r\n\r\n  return (\r\n    <BodyWrapper style={{ padding: 24 }}>\r\n      <AutoColumn gap=\"16px\">\r\n        <AutoRow style={{ alignItems: 'center', justifyContent: 'space-between' }} gap=\"8px\">\r\n          <BackArrow to=\"/migrate/v1\" />\r\n          <TYPE.mediumHeader>Migrate V1 Liquidity</TYPE.mediumHeader>\r\n          <div>\r\n            <QuestionHelper text=\"Migrate your liquidity tokens from Uniswap V1 to Uniswap V2.\" />\r\n          </div>\r\n        </AutoRow>\r\n\r\n        {!account ? (\r\n          <TYPE.largeHeader>You must connect an account.</TYPE.largeHeader>\r\n        ) : validatedAddress && chainId && token?.equals(WETH[chainId]) ? (\r\n          <>\r\n            <TYPE.body my={9} style={{ fontWeight: 400 }}>\r\n              Because Uniswap V2 uses WETH under the hood, your Uniswap V1 WETH/ETH liquidity cannot be migrated. You\r\n              may want to remove your liquidity instead.\r\n            </TYPE.body>\r\n\r\n            <ButtonConfirmed\r\n              onClick={() => {\r\n                history.push(`/remove/v1/${validatedAddress}`)\r\n              }}\r\n            >\r\n              Remove\r\n            </ButtonConfirmed>\r\n          </>\r\n        ) : userLiquidityBalance && token ? (\r\n          <V1PairMigration liquidityTokenAmount={userLiquidityBalance} token={token} />\r\n        ) : (\r\n          <EmptyState message=\"Loading...\" />\r\n        )}\r\n      </AutoColumn>\r\n    </BodyWrapper>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}